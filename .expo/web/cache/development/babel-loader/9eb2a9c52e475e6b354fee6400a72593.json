{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/CounterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'increase_counter':\n      console.log(action.payload);\n      return state.counter + action.payload > 255 || state.counter + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter + action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nvar CounterScreen = function CounterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useReducer = useReducer(reducer, {\n    counter: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Counter\"), React.createElement(Button, {\n    title: \"Increase\",\n    onPress: function onPress() {\n      dispatch({\n        type: 'increase_counter',\n        payload: 1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Decrease\",\n    onPress: function onPress() {\n      dispatch({\n        type: 'increase_counter',\n        payload: -1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, state.counter));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30\n  }\n});\nexport default CounterScreen;","map":{"version":3,"sources":["/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/CounterScreen.js"],"names":["React","useReducer","reducer","state","action","type","console","log","payload","counter","CounterScreen","navigation","dispatch","styles","text","StyleSheet","create","fontSize"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAEjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,aAAOL,KAAK,CAACM,OAAN,GAAgBL,MAAM,CAACI,OAAvB,GAAiC,GAAjC,IAAwCL,KAAK,CAACM,OAAN,GAAgBL,MAAM,CAACI,OAAvB,GAAiC,CAAzE,GACHL,KADG,mCAEEA,KAFF;AAESM,QAAAA,OAAO,EAAEN,KAAK,CAACM,OAAN,GAAgBL,MAAM,CAACI;AAFzC,QAAP;;AAIF;AACE,aAAOL,KAAP;AARJ;;AASC;AACF,CAZD;;AAcA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,oBAGdV,UAAU,CAACC,OAAD,EAAU;AAAEO,IAAAA,OAAO,EAAE;AAAX,GAAV,CAHI;AAAA;AAAA,MAGjCN,KAHiC;AAAA,MAG1BS,QAH0B;;AAKxC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAE,mBAAM;AACtCF,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,kBAAR;AAA4BG,QAAAA,OAAO,EAAE;AAArC,OAAD,CAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAE,mBAAM;AACtCI,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,kBAAR;AAA4BG,QAAAA,OAAO,EAAE,CAAC;AAAtC,OAAD,CAAR;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,KAAK,CAACM,OAAlC,CAVF,CADF;AAcD,CAnBD;;AAqBA,IAAMI,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,IAAI,EAAE;AACJG,IAAAA,QAAQ,EAAE;AADN;AADyB,CAAlB,CAAf;AAMA,eAAeP,aAAf","sourcesContent":["import React, { useReducer } from \"react\"; // usestate is a hook to follow the state of the variable\nimport { Text, StyleSheet, View, Button } from \"react-native\";\n\n\nconst reducer = (state, action) => {\n\n  switch (action.type) { // does not change the state object. Returns a copy with the modified data\n    case 'increase_counter':\n      console.log(action.payload);\n      return state.counter + action.payload > 255 || state.counter + action.payload < 0\n        ? state\n        : { ...state, counter: state.counter + action.payload };\n\n    default:\n      return state;\n  };\n};\n\nconst CounterScreen = ({ navigation }) => {  // stands for props.navigation\n\n  //const[counter, setCounter] = useState(0); // creating a counter with a state - array destructuring[]\n  const [state, dispatch] = useReducer(reducer, { counter: 0 }); // intitialize the reducer with the starting values\n\n  return (\n    <View>\n      <Text style={styles.text}>Counter</Text>\n      <Button title=\"Increase\" onPress={() => {\n        dispatch({ type: 'increase_counter', payload: 1 });\n      }}\n      />\n      <Button title=\"Decrease\" onPress={() => {\n        dispatch({ type: 'increase_counter', payload: -1 });\n      }}\n      />\n      <Text style={styles.text} >{state.counter}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 30\n  }\n});\n\nexport default CounterScreen;\n"]},"metadata":{},"sourceType":"module"}