{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/SquareScreen.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ColorCounter from \"../Components/ColorCounter\";\nvar COLOR_INCREMENT = 10;\n\nvar SquareScreen = function SquareScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      red = _useState2[0],\n      setRed = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      green = _useState4[0],\n      setGreen = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      blue = _useState6[0],\n      setBlue = _useState6[1];\n\n  var setColor = function setColor(color, change) {\n    switch (color) {\n      case 'red':\n        red + change > 255 || red + change < 0 ? null : set(red + change);\n        return;\n\n      case 'green':\n        if (green + change > 255 || green + change < 0) {\n          return;\n        } else {\n          setGreen(green + change);\n        }\n\n        ;\n        return;\n\n      case 'blue':\n        if (blue + change > 255 || blue + change < 0) {\n          return;\n        } else {\n          setBlue(blue + change);\n        }\n\n        ;\n        return;\n    }\n\n    ;\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('red', COLOR_INCREMENT);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('red', -1 * COLOR_INCREMENT);\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('blue', COLOR_INCREMENT);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('blue', -1 * COLOR_INCREMENT);\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return setColor('green', COLOR_INCREMENT);\n    },\n    onDecrease: function onDecrease() {\n      return setColor('green', -1 * COLOR_INCREMENT);\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/SquareScreen.js"],"names":["React","useState","ColorCounter","COLOR_INCREMENT","SquareScreen","navigation","red","setRed","green","setGreen","blue","setBlue","setColor","color","change","set","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"; // usestate is a hook to follow the state of the variable\nimport { Text, StyleSheet, View, Button } from \"react-native\";\nimport ColorCounter from '../Components/ColorCounter';\n\nconst COLOR_INCREMENT = 10;\n\nconst SquareScreen = ({navigation}) => {  // stands for props.navigation\n    const [red, setRed] = useState(0);\n    const [green, setGreen] = useState(0);\n    const [blue, setBlue] = useState(0);\n   \n    const setColor = (color, change) => {\n        switch (color) {\n            case 'red':\n                red + change > 255 || red + change < 0 ? null : set(red + change);\n                // if (red + change > 255 || red + change < 0) {\n                //     return;\n                // } else {\n                //     setRed(red + change);\n                // };\n                return;\n            case 'green':\n                if (green + change > 255 || green + change < 0) {\n                    return;\n                } else {\n                    setGreen(green + change);\n                };\n                return;\n            case 'blue':\n                if (blue + change > 255 || blue + change < 0) {\n                    return;\n                } else {\n                    setBlue(blue + change);\n                };\n                return;\n\n        };\n    };\n\n    return (\n        <View>\n            <ColorCounter\n                onIncrease={() => setColor('red', COLOR_INCREMENT)}\n                onDecrease={() => setColor('red', -1 * COLOR_INCREMENT)}\n                color=\"Red\"\n            />\n            <ColorCounter\n                onIncrease={() => setColor('blue', COLOR_INCREMENT)}\n                onDecrease={() => setColor('blue', -1 *COLOR_INCREMENT)}\n                color=\"Blue\"\n            />\n            <ColorCounter\n                onIncrease={() => setColor('green', COLOR_INCREMENT)}\n                onDecrease={() => setColor('green', -1 * COLOR_INCREMENT)}\n                color=\"Green\"\n            />\n            <View\n                style={{ height: 150, width: 150, backgroundColor: `rgb(${red}, ${green}, ${blue})` }}\n            />\n        </View>\n    );\n      \n};\n\nconst styles = StyleSheet.create({});\n\nexport default SquareScreen;\n"]},"metadata":{},"sourceType":"module"}