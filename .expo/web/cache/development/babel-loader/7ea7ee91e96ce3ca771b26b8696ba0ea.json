{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/ColourScreen.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar CounterScreen = function CounterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colours = _useState2[0],\n      setColours = _useState2[1];\n\n  console.log(colours);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Add a colour\",\n    onPress: function onPress() {\n      setColours([].concat(_toConsumableArray(colours), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100,\n      width: 100,\n      backgroundColor: randomRgb()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return 'rgb(${red}, ${green}, ${blue})';\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30\n  }\n});\nexport default CounterScreen;","map":{"version":3,"sources":["/home/osboxes/sandbox/udemy/react/rn-starter/src/screens/ColourScreen.js"],"names":["React","useState","CounterScreen","navigation","colours","setColours","console","log","randomRgb","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create","text","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACNF,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MAC7BG,OAD6B;AAAA,MACpBC,UADoB;;AAEpCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACF,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,cADN;AAEI,IAAA,OAAO,EAAE,mBAAM;AACnBC,MAAAA,UAAU,8BAAKD,OAAL,IAAcI,SAAS,EAAvB,GAAV;AACD,KAJC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAC,GAArB;AAA0BC,MAAAA,eAAe,EAAEH,SAAS;AAApD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAYD,CAfD;;AAiBA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMI,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAb;AACA,SAAO,gCAAP;AACH,CALD;;AAOA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADyB,CAAlB,CAAf;AAMA,eAAepB,aAAf","sourcesContent":["import React, {useState} from \"react\"; // usestate is a hook to follow the state of the variable\nimport { Text, StyleSheet, View, Button } from \"react-native\";\n\nconst CounterScreen = ({navigation}) => {  // stands for props.navigation\n    const [colours, setColours] = useState([]);\n    console.log(colours);\n  return (\n      <View>\n          <Button \n          title=\"Add a colour\" \n              onPress={() => {\n          setColours([...colours, randomRgb()])\n        }}\n          />\n          <View style={{ height: 100, width:100, backgroundColor: randomRgb() }} />\n\n      </View>\n  );\n};\n\nconst randomRgb = () => {\n    const red = Math.floor(Math.random()*256);\n    const green = Math.floor(Math.random()*256);\n    const blue = Math.floor(Math.random()*256);\n    return 'rgb(${red}, ${green}, ${blue})'\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 30\n  }\n});\n\nexport default CounterScreen;\n"]},"metadata":{},"sourceType":"module"}